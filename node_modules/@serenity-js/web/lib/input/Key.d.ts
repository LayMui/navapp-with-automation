/**
 * @desc
 *  Represents pressable keys that aren't text to be used with {@link Press}.
 *
 *  Note that modifier like Shift, Alt and Meta (a.k.a. Command on Mac) will stay pressed
 *
 * @enum {string}
 * @see {@link Press}
 * @see https://w3c.github.io/webdriver/webdriver-spec.html#keyboard-actions
 * @see https://github.com/puppeteer/puppeteer/blob/v7.1.0/src/common/USKeyboardLayout.ts
 * @see https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/lib/input.js#L46
 * @see https://github.com/webdriverio/webdriverio/blob/main/packages/wdio-utils/src/constants.ts#L5
 */
export declare class Key {
    readonly devtoolsName: string;
    readonly utf16codePoint: string;
    readonly isModifier: boolean;
    static Alt: Key;
    static ArrowDown: Key;
    static ArrowLeft: Key;
    static ArrowRight: Key;
    static ArrowUp: Key;
    static Backspace: Key;
    static Cancel: Key;
    static Clear: Key;
    static Control: Key;
    static Delete: Key;
    static End: Key;
    static Enter: Key;
    static Escape: Key;
    static F1: Key;
    static F2: Key;
    static F3: Key;
    static F4: Key;
    static F5: Key;
    static F6: Key;
    static F7: Key;
    static F8: Key;
    static F9: Key;
    static F10: Key;
    static F11: Key;
    static F12: Key;
    static Help: Key;
    static Home: Key;
    static Insert: Key;
    static Meta: Key;
    static Numpad0: Key;
    static Numpad1: Key;
    static Numpad2: Key;
    static Numpad3: Key;
    static Numpad4: Key;
    static Numpad5: Key;
    static Numpad6: Key;
    static Numpad7: Key;
    static Numpad8: Key;
    static Numpad9: Key;
    static NumpadAdd: Key;
    static NumpadDecimal: Key;
    static NumpadDivide: Key;
    static NumpadEqual: Key;
    static NumpadMultiply: Key;
    static NumpadSubtract: Key;
    static PageDown: Key;
    static PageUp: Key;
    static Pause: Key;
    static Semicolon: Key;
    static Shift: Key;
    static Space: Key;
    static Tab: Key;
    static isKey(maybeKey: unknown): maybeKey is Key;
    constructor(devtoolsName: string, utf16codePoint: string, isModifier?: boolean);
    toString(): string;
}
