import { Answerable, Optional, QuestionAdapter } from '@serenity-js/core';
import { Locator } from './Locator';
import { Selector } from './selectors';
export declare abstract class PageElement<Native_Element_Type = any> implements Optional {
    readonly locator: Locator<Native_Element_Type>;
    static located<NET>(selector: Answerable<Selector>): QuestionAdapter<PageElement<NET>>;
    static of<NET>(childElement: Answerable<PageElement<NET>>, parentElement: Answerable<PageElement<NET>>): QuestionAdapter<PageElement<NET>>;
    constructor(locator: Locator<Native_Element_Type>);
    abstract of(parentElement: PageElement<Native_Element_Type>): PageElement<Native_Element_Type>;
    nativeElement(): Promise<Native_Element_Type>;
    toString(): string;
    abstract enterValue(value: string | number | Array<string | number>): Promise<void>;
    abstract clearValue(): Promise<void>;
    abstract click(): Promise<void>;
    abstract doubleClick(): Promise<void>;
    abstract scrollIntoView(): Promise<void>;
    abstract hoverOver(): Promise<void>;
    abstract rightClick(): Promise<void>;
    abstract attribute(name: string): Promise<string>;
    abstract text(): Promise<string>;
    abstract value(): Promise<string>;
    abstract isActive(): Promise<boolean>;
    abstract isClickable(): Promise<boolean>;
    abstract isEnabled(): Promise<boolean>;
    abstract isPresent(): Promise<boolean>;
    abstract isSelected(): Promise<boolean>;
    abstract isVisible(): Promise<boolean>;
}
