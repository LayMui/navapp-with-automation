"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BrowseTheWeb = void 0;
const core_1 = require("@serenity-js/core");
class BrowseTheWeb {
    constructor(locators) {
        this.locators = locators;
    }
    /**
     * @desc
     *  Used to access the Actor's ability to {@link BrowseTheWeb}
     *  from within the {@link @serenity-js/core/lib/screenplay~Interaction} classes,
     *  such as {@link Click}.
     *
     * @param {@serenity-js/core/lib/screenplay/actor~UsesAbilities} actor
     * @return {BrowseTheWeb}
     */
    static as(actor) {
        return actor.abilityTo(BrowseTheWeb);
    }
    locate(selector) {
        for (const [type, locatorFactory] of this.locators) {
            if (selector instanceof type) {
                return locatorFactory(selector);
            }
        }
        throw new core_1.LogicError((0, core_1.f) `${selector} is not supported by ${this.constructor.name}`);
    }
}
exports.BrowseTheWeb = BrowseTheWeb;
//# sourceMappingURL=BrowseTheWeb.js.map