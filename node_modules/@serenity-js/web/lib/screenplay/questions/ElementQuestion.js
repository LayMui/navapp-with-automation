"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ElementQuestion = void 0;
const core_1 = require("@serenity-js/core");
const io_1 = require("@serenity-js/core/lib/io");
/**
 * @desc
 *  A base class for questions about {@link PageElement}s.
 *
 * @extends {@serenity-js/core/lib/screenplay~Question}
 */
// todo: remove
class ElementQuestion extends core_1.Question {
    constructor(subject) {
        super();
        this.subject = subject;
    }
    /**
     * @desc
     *  Changes the description of this question's subject.
     *
     * @param {string} subject
     * @returns {Question<T>}
     */
    describedAs(subject) {
        this.subject = subject;
        return this;
    }
    toString() {
        return this.subject;
    }
    /**
     * @desc
     *  Returns the resolved {@link PageElement}, or throws a {@link @serenity-js/core/lib/errors~LogicError}
     *  if the element is `undefined`.
     *
     * @param {@serenity-js/core/lib/screenplay/actor~AnswersQuestions} actor
     * @param {@serenity-js/core/lib/screenplay~Answerable<Element|ElementList>} element
     *
     * @returns {Promise<PageElement|PageElements>}
     *
     * @protected
     */
    async resolve(actor, element) {
        const resolved = await actor.answer(element);
        if (!resolved) {
            throw new core_1.LogicError((0, io_1.formatted) `Couldn't find ${element}`);
        }
        return resolved;
    }
}
exports.ElementQuestion = ElementQuestion;
//# sourceMappingURL=ElementQuestion.js.map