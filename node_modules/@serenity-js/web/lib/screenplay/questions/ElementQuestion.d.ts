import { Answerable, AnswersQuestions, Question } from '@serenity-js/core';
/**
 * @desc
 *  A base class for questions about {@link PageElement}s.
 *
 * @extends {@serenity-js/core/lib/screenplay~Question}
 */
export declare abstract class ElementQuestion<T> extends Question<T> {
    protected subject: string;
    constructor(subject: string);
    /**
     * @desc
     *  Changes the description of this question's subject.
     *
     * @param {string} subject
     * @returns {Question<T>}
     */
    describedAs(subject: string): this;
    toString(): string;
    /**
     * @desc
     *  Returns the resolved {@link PageElement}, or throws a {@link @serenity-js/core/lib/errors~LogicError}
     *  if the element is `undefined`.
     *
     * @param {@serenity-js/core/lib/screenplay/actor~AnswersQuestions} actor
     * @param {@serenity-js/core/lib/screenplay~Answerable<Element|ElementList>} element
     *
     * @returns {Promise<PageElement|PageElements>}
     *
     * @protected
     */
    protected resolve<T>(actor: AnswersQuestions, element: Answerable<T>): Promise<T>;
}
