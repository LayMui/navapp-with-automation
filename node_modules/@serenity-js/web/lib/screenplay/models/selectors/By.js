"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.By = void 0;
const core_1 = require("@serenity-js/core");
const ByCss_1 = require("./ByCss");
const ByCssContainingText_1 = require("./ByCssContainingText");
const ById_1 = require("./ById");
const ByTagName_1 = require("./ByTagName");
const ByXPath_1 = require("./ByXPath");
class By {
    static css(selector) {
        return core_1.Question.about((0, core_1.f) `by css (${selector})`, async (actor) => {
            const bySelector = await actor.answer(selector);
            return new ByCss_1.ByCss(bySelector);
        });
    }
    static cssContainingText(selector, text) {
        return core_1.Question.about((0, core_1.f) `by css (${selector}) containing text ${text}`, async (actor) => {
            const bySelector = await actor.answer(selector);
            const textSelector = await actor.answer(text);
            return new ByCssContainingText_1.ByCssContainingText(bySelector, textSelector);
        });
    }
    static id(selector) {
        return core_1.Question.about((0, core_1.f) `by id (${selector})`, async (actor) => {
            const bySelector = await actor.answer(selector);
            return new ById_1.ById(bySelector);
        });
    }
    static tagName(selector) {
        return core_1.Question.about((0, core_1.f) `by tag name (${selector})`, async (actor) => {
            const bySelector = await actor.answer(selector);
            return new ByTagName_1.ByTagName(bySelector);
        });
    }
    static xpath(selector) {
        return core_1.Question.about((0, core_1.f) `by xpath (${selector})`, async (actor) => {
            const bySelector = await actor.answer(selector);
            return new ByXPath_1.ByXPath(bySelector);
        });
    }
}
exports.By = By;
//# sourceMappingURL=By.js.map