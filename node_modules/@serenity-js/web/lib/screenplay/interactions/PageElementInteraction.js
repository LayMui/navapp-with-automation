"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageElementInteraction = void 0;
const core_1 = require("@serenity-js/core");
const io_1 = require("@serenity-js/core/lib/io");
/**
 * @desc
 *  A base class for interactions with {@link PageElement}s.
 *
 * @extends {@serenity-js/core/lib/screenplay~Interaction}
 */
class PageElementInteraction extends core_1.Interaction {
    /**
     * @param {string} description
     *  A human-readable description to be used when reporting
     *  this {@link @serenity-js/core/lib/screenplay~Interaction}.
     *
     * @protected
     */
    constructor(description) {
        super();
        this.description = description;
    }
    /**
     * @desc
     *  Returns the resolved {@link PageElement}, or throws a {@link @serenity-js/core/lib/errors~LogicError}
     *  if the element is `undefined`.
     *
     * @param {@serenity-js/core/lib/screenplay/actor~AnswersQuestions} actor
     * @param {@serenity-js/core/lib/screenplay~Answerable<Element<'async'>>} element
     *
     * @returns {Promise<PageElement>}
     *
     * @protected
     */
    async resolve(actor, element) {
        const resolved = await actor.answer(element);
        if (!resolved) {
            throw new core_1.LogicError((0, io_1.formatted) `Couldn't find ${element}`);
        }
        return resolved;
    }
    /**
     * @desc
     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.
     *
     * @returns {string}
     */
    toString() {
        return this.description;
    }
}
exports.PageElementInteraction = PageElementInteraction;
//# sourceMappingURL=PageElementInteraction.js.map