import { Answerable, Optional, QuestionAdapter } from '@serenity-js/core';
import { Locator } from './Locator';
import { Selector } from './selectors';
import { Switchable } from './Switchable';
export declare abstract class Frame<Native_Element_Type = any> implements Optional, Switchable {
    protected readonly locator: Locator<Native_Element_Type>;
    static located<NET>(selector: Answerable<Selector>): QuestionAdapter<Frame<NET>>;
    constructor(locator: Locator<Native_Element_Type>);
    /**
     * @desc
     *  Switches the current browsing context to the given frame
     *  and returns an object that allows the caller to switch back
     *  to the previous context if needed.
     *
     * @returns {Promise<{ switchBack(): Promise<void> }>}
     */
    abstract switchTo(): Promise<{
        switchBack(): Promise<void>;
    }>;
    /**
     * @desc
     *  Returns an {@link Promise} that resolves to `true` when the frame
     *  is present, `false` otherwise.
     *
     * @returns {Promise<boolean>}
     */
    abstract isPresent(): Promise<boolean>;
    toString(): string;
}
